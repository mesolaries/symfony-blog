{% extends 'base.html.twig' %}

{% block title %}{{ article.title }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
{% endblock %}

{% block body %}
    {% set userLike = is_granted('ROLE_USER') ? article.getLikeByUser(app.user).first : 0 %}
    {% set userLikeId = userLike ? userLike.id : 0 %}
    <!-- Post Content Column -->
    <div class="col-lg-8">

        <!-- Title -->
        <h1 class="mt-4">{{ article.title }}</h1>

        <!-- Author -->
        <p class="lead">
            by
            {{ article.author.name }} <a href="{{ path('profile', {username: article.author.username}) }}"><small>@{{ article.author.username }}</small></a>
        </p>

        <hr>

        <!-- Date/Time -->
        <p>Posted on {{ article.publishedAt.format('F d, Y \\a\\t H:i') }}</p>

        <hr>

        <!-- Preview Image -->
        <img class="img-fluid rounded" src="{{ article.picture is not null ? asset(web_dir ~ '/' ~ article.picture) : 'http://placehold.it/750x300' }}" alt="">

        {% if is_granted('ROLE_USER') %}
            <div class="mt-2">
                <span class="text-secondary article-like-count">{{ article.likes.count }}</span>
                    <a href="#"
                       class="
                            text-secondary
                            {{
                                userLike
                                ? 'article-unlike'
                                : 'article-like'
                            }}
                        "
                       data-id="{{ userLikeId }}"
                    >
                        <span
                                class="{{ userLike ? 'fas' : 'far' }} fa-thumbs-up">
                        </span>
                    </a>

            </div>
        {% endif %}

        <hr>

        <p>
            {{ article.content|raw }}
        </p>

        <hr>

        {% if article.author == app.user or is_granted('ROLE_ADMIN') %}
            <a class="btn btn-light" href="{{ path('article.edit', {slug: article.slug}) }}">
                <span class="fas fa-edit"></span> Edit
            </a>
            {{ form_start(deleteForm, {'attr': {'class': 'd-inline-block'}}) }}
            {{ form_widget(deleteForm) }}
            <button type="submit" class="btn btn-outline-danger" onclick="return confirm('Are you sure?')">
                <span class="fas fa-trash"></span> Delete
            </button>
            {{ form_end(deleteForm) }}
        {% endif %}

        <hr>

        {%
            include 'template_parts/_comments.html.twig' with
            {
                'commentForm': commentForm,
                'replyFormObject': replyFormObject,
                'article': article
            } only
        %}

    </div>

    {{ include('template_parts/sidebar/_sidebar.html.twig') }}
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        $(document).ready(function() {
            $('.comment-reply').on('click', function (e) {
                e.preventDefault();
                $(this).siblings('form').removeClass('d-none');
                $(this).addClass('d-none');
            });

            $(this).on('click', '.article-like', function (e) {
                e.preventDefault();
                let button = $(this);
                button.find('[data-fa-i2svg]').removeClass('far').addClass('fas');
                button.removeClass('article-like');
                let currentLikeCountSelector = $('.article-like-count');
                let currentLikeCount = currentLikeCountSelector.html();
                currentLikeCountSelector.html(++currentLikeCount);
                $.ajax({
                    url: '{{ path('like.article', {slug: article.slug}) }}',
                    type: 'POST',
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        console.log(data);
                        $('.article-like-count').html(data.likeCount);
                        button.attr('data-id', data.likeId);
                        button.addClass('article-unlike');
                    }
                });
            });

            $(this).on('click', '.article-unlike', function (e) {
                e.preventDefault();
                let button = $(this);
                button.find('[data-fa-i2svg]').removeClass('fas').addClass('far');
                button.removeClass('article-unlike');
                let currentLikeCountSelector = $('.article-like-count');
                let currentLikeCount = currentLikeCountSelector.html();
                currentLikeCountSelector.html(--currentLikeCount);
                $.ajax({
                    url: '{{ path('like.remove', {"id": "like_id"}) }}'.replace('like_id', button.attr('data-id')),
                    type: 'POST',
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        console.log(data);
                        $('.article-like-count').html(data.likeCount);
                        button.addClass('article-like');
                    }
                });
            });

            $(this).on('click', '.comment-like', function (e) {
                e.preventDefault();
                let button = $(this);
                button.removeClass('comment-like');
                let currentLikeCount = button.siblings('.comment-like-count').html();
                button.siblings('.comment-like-count').html(++currentLikeCount);
                button.text('Unlike');
                $.ajax({
                    url: '{{ path('like.comment', {"id": "comment_id"}) }}'.replace('comment_id', button.attr('data-id')),
                    type: 'POST',
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        console.log(data);
                        button.siblings('.comment-like-count').html(data.likeCount);
                        button.attr('data-id', data.likeId);
                        button.addClass('comment-unlike');
                    }
                });
            });

            $(this).on('click', '.comment-unlike', function (e) {
                e.preventDefault();
                let button = $(this);
                button.removeClass('comment-unlike');
                let currentLikeCount = button.siblings('.comment-like-count').html();
                button.siblings('.comment-like-count').html(--currentLikeCount);
                button.text('Like');
                $.ajax({
                    url: '{{ path('like.remove', {"id": "like_id"}) }}'.replace('like_id', button.attr('data-id')),
                    type: 'POST',
                    dataType: 'json',
                    async: true,
                    success: function (data) {
                        console.log(data);
                        button.siblings('.comment-like-count').html(data.likeCount);
                        button.attr('data-id', data.commentId);
                        button.addClass('comment-like');
                    }
                });
            });
        })
    </script>
{% endblock %}